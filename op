#!/bin/bash
declare -a versions=("9.5.0" "9.5.1" "9.5.2" "9.5.3" "9.5.4" "9.5.5" "9.5.6" "9.5.7" "9.5.8" "9.5.9" "9.6.0" "9.6.1" "9.6.2" "9.6.3" "9.6.4" "9.6.5" "9.6.6" "9.6.7" "9.6.8")

case "$1" in
    make_image)
        # Build the image called "pg-test" from the Dockerfile
        docker build -f ./Dockerfile -t pg-test .
        ;;
    make_containers)
        # Create containers using the "pg-test" image that was created
        for ver in "${versions[@]}"; do
            echo "Making pg-$ver"
            docker create --name "pg-$ver" pg-test
            docker start "pg-$ver"
        done
        ;;
    rm_containers)
        # Delete all containers
        for ver in "${versions[@]}"; do
            docker stop "pg-$ver"
            docker rm "pg-$ver"
        done
        ;;
    make_pg)
        # Builds the PostgreSQL on each of the containers
        # (each container should have a different version of PostgreSQL)
        for ver in "${versions[@]}"; do
            git_tag="REL"$(echo $ver | sed -e 's/\./_/g')
            git_branch="rel-$ver"
            docker exec -t -i "pg-$ver" bash -c "cd /root/postgres; git checkout -b $git_branch $git_tag"
            docker exec -d -t -i "pg-$ver" bash -c "cd /root/postgres; autoreconf -i; ./configure ; make ; make install;"
        done
        ;;
    make_pg_cluster)
        # Creates the PostgreSQL cluster (data directory) on all the containers
        for ver in "${versions[@]}"; do
            # create a /var/lib/postgresql/ from scratch if one is already present, this is going to 
            # be the data directory.
            docker exec -t -i pg-$ver bash -c 'rm -rf /var/lib/postgresql/; mkdir /var/lib/postgresql/; chown -R postgres:postgres /var/lib/postgresql/'
            # create the pg cluster
            docker exec -u postgres -t -i pg-$ver bash -c '/usr/local/pgsql/bin/pg_ctl init -D /var/lib/postgresql/'
            # copy the configs and change ower/group to postgres
            docker cp postgresql.custom.conf pg-$ver:/var/lib/postgresql/postgresql.conf
            docker exec -t -i pg-$ver chown postgres:postgres /var/lib/postgresql/postgresql.conf
        done
        ;;
    shell_pg)
        # Get a shell to a container using the postgres user
        # Ex: ./op shell_pg 9.6.8
        docker exec -u postgres -t -i pg-$2 bash
        ;;
    shell_root)
        # Get a shell to a container using the root user
        # Ex: ./op shell_root 9.6.8
        docker exec -t -i pg-$2 bash
        ;;
    start_pg)
        # Starts the PostgreSQL server on all the containers
        # (also provide them with the right config file using postgresql.custom.conf)
        for ver in "${versions[@]}"; do
            echo "Starting pg on container pg-$ver"
            docker exec -u postgres -d -t -i pg-$ver bash -c 'nohup /usr/local/pgsql/bin/pg_ctl -D /var/lib/postgresql -l /var/log/postgresql/logfile start'
        done
        ;;
    stop_pg)
        # Stop the PostgreSQL server on all containers
        for ver in "${versions[@]}"; do
            echo "Stopping pg on container pg-$ver"
            docker exec -u postgres -t -i pg-$ver bash -c '/usr/local/pgsql/bin/pg_ctl stop -D /var/lib/postgresql'
        done
        ;;
    run_tests)
        # Run the tests on all containers
        for ver in "${versions[@]}"; do
            echo "Provisioning container pg-$ver to run tests"
            docker exec -t -i pg-$ver rm -rf /home/postgres/t/
            docker cp t/ pg-$ver:/home/postgres/
            docker exec -t -i pg-$ver chown -R postgres:postgres /home/postgres/t/
            echo "Running tests on container pg-$ver"
            docker exec -u postgres -t -i pg-$ver bash /home/postgres/t/config-setting-persistence-index.sh
        done
        ;;
    report)
        exec &> >(tee "t/config-setting-persistence-index.report.txt")

        echo "Report for the test config-setting-persistence-index"
        echo "===================================================="
        for ver in "${versions[@]}"; do
            echo "Number of \"prefix.persist was not set\" found in logs for pg-$ver"
            docker exec -t -i pg-$ver cat /var/log/postgresql/logfile | grep "LOG:" | \
            perl -ne 'BEGIN{@a=(0);$i=-1;$s=0;};if(m{restore_start}){$i++; $a[$i].=$_; $s=1;}elsif(m{restore_end} && $s == 1){$a[$i].=$_; $s=0;} elsif($s){$a[$i].=$_;}; END {print $a[-1];}' | \
            grep "prefix.persist was not set" | wc -l
        done
        ;;
    *)
        echo "none"
        ;;
esac



